[{"/Users/Gun/Documents/GitHub/Employee-Directory/src/index.js":"1","/Users/Gun/Documents/GitHub/Employee-Directory/src/App.js":"2","/Users/Gun/Documents/GitHub/Employee-Directory/src/components/searchResultArea.js":"3","/Users/Gun/Documents/GitHub/Employee-Directory/src/components/employeeCard.js":"4","/Users/Gun/Documents/GitHub/Employee-Directory/src/components/searchForm.js":"5","/Users/Gun/Documents/GitHub/Employee-Directory/src/utils/API.js":"6","/Users/Gun/Documents/GitHub/Employee-Directory/src/components/SearchResultArea.js":"7","/Users/Gun/Documents/GitHub/Employee-Directory/src/components/SearchForm.js":"8","/Users/Gun/Documents/GitHub/Employee-Directory/src/components/EmployeeCard.js":"9"},{"size":149,"mtime":1613789117701,"results":"10","hashOfConfig":"11"},{"size":166,"mtime":1613787213484,"results":"12","hashOfConfig":"11"},{"size":3893,"mtime":1613773275670,"results":"13","hashOfConfig":"11"},{"size":712,"mtime":1613766581784,"results":"14","hashOfConfig":"11"},{"size":736,"mtime":1613767664352,"results":"15","hashOfConfig":"11"},{"size":160,"mtime":1613787330415,"results":"16","hashOfConfig":"11"},{"size":3981,"mtime":1613786347973,"results":"17","hashOfConfig":"11"},{"size":738,"mtime":1613789872470,"results":"18","hashOfConfig":"11"},{"size":712,"mtime":1613786556504,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yqtpo7",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/Gun/Documents/GitHub/Employee-Directory/src/index.js",[],"/Users/Gun/Documents/GitHub/Employee-Directory/src/App.js",[],["43","44"],"/Users/Gun/Documents/GitHub/Employee-Directory/src/components/searchResultArea.js",["45"],"import React, { Component } from 'react';\nimport searchForm from './searchForm';\nimport employeeCard from'./employeeCard';\nimport API from '../utils/API';\nimport'./results.css';\nconst MaxResults = 20;\n\nclass searchResultArea extends Component {\n    state = {\n        result: [],\n        filter: '',\n        filterBy: 'lastname',\n        currentSort: 'default',\n        sortField:''\n    };\n\n// when component mounts search using the API\ncomponentDidMount() {\n    API.search()\n    .then(res => {\n        console.log(res)\n        this.setState({\n            result: res.data.results.map((e, i) => ({\n                firstName: e.name.first,\n                lastName: e.name.last,\n                picture: e.piture.large,\n                email: e.email,\n                phone: e.phone,\n                dob: e.age,\n                key: i\n            }))\n            \n        })\n    })\n        .catch(err => console.log(err));\n}\n\nfilterEmployees = (searchkey) => {\n    console.log(\"***in Filter*******\");\n    console.log(searchkey);\n    console.log(this.state.result);\n    \n    var filterResult = this.state.result.filter(person => person.firstName === searchkey)\nthis.setState({\n    result:filterResult\n})\n}\n\nhandleFormSubmit = event => {\n    event.preventDefault();\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(\"**********\");\n    console.log(value);\n    console.log(name);\n\n    this.filterEmployees(value);\n    this.filterEmployees(this.state.search);\n};\n\nhandleImputChange = event => {\n    event.preventDefault();\n    console.log(event);\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(\"**********\");\n    console.log(value);\n    console.log(name);\n\n    this.setState({\n        [ name ]: value\n    });\n};\n\nrender() {\n\n    return(\n        <div className='container'>\n            <div className='row'>\n                <div className='col-md-12'>\n                <h1>Employee Directory</h1>\n          </div>\n        </div>\n                <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <searchForm\n                    value={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n          </div>\n        </div>\n\n    <div className='row'>\n        {/* <div> */}\n        <table className='table'>\n            <tr>\n            <th scope=\"col\">Photo</th>\n              <th>First Name</th>\n              {/* <th onClick={this.onSortChange}>First Name   */}\n              {/* <button onClick={this.onSortChange}> ^\n\t\t\t\t\t\t\t\t</button> */}\n              {/* </th> */}\n              <th scope=\"col\">Last Name </th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone</th>\n            </tr>\n            {/* { [...this.state.result].sort(this.sortTypes[this.state.currentSort].fn).map((item) =>  */}\n            {/* {this.state.result.length > 0 ? (\n                <div>\n                  {this.state.result.map(item => (\n                    <EmployeeCard\n                      picture={item.picture}\n                      firstName={item.firstName}\n                      lastName={item.lastName}\n                      email={item.email}\n                      phone={item.phone}\n                      key={item.key}\n                    />\n                  ))}\n                </div>\n              ) : (<div />)} */}\n            {[...this.state.result].map((item) =>\n              <employeeCard\n                picture={item.picture}\n                firstName={item.firstName}\n                lastName={item.lastName}\n                email={item.email}\n                phone={item.phone}\n                key={item.key}\n              />\n            )}\n\n        </table>\n        </div>\n        </div>\n    \n    );\n\n    }\n\n}\n\nexport default searchResultArea;",["46","47"],"/Users/Gun/Documents/GitHub/Employee-Directory/src/components/employeeCard.js",[],"/Users/Gun/Documents/GitHub/Employee-Directory/src/components/searchForm.js",[],"/Users/Gun/Documents/GitHub/Employee-Directory/src/utils/API.js",["48"],"import axios from 'axios';\n\nconst BASEURL = 'https://randomuser.me/api/';\n\nexport default {\n    search: function() {\n        return axios.get(BASEURL);\n    }\n};","/Users/Gun/Documents/GitHub/Employee-Directory/src/components/SearchResultArea.js",["49"],"import React, { Component } from 'react';\nimport SearchForm from './SearchForm';\nimport EmployeeCard from'./EmployeeCard';\nimport API from '../utils/API';\nimport'./results.css';\nconst MaxResults = 20;\n\nclass SearchResultArea extends Component {\n    state = {\n        result: [],\n        filter: '',\n        filterBy: 'lastname',\n        currentSort: 'default',\n        sortField:''\n    };\n\n// when component mounts search using the API\ncomponentDidMount() {\n    API.search()\n    .then(res => {\n        console.log(res)\n        this.setState({\n            result: res.data.results.map((e, i) => ({\n                firstName: e.name.first,\n                lastName: e.name.last,\n                picture: e.piture.large,\n                email: e.email,\n                phone: e.phone,\n                dob: e.age,\n                key: i\n            }))\n            \n        })\n    })\n        .catch(err => console.log(err));\n}\n\nfilterEmployees = (searchkey) => {\n    console.log(\"***in Filter*******\");\n    console.log(searchkey);\n    console.log(this.state.result);\n    \n    var filterResult = this.state.result.filter(person => person.firstName === searchkey)\nthis.setState({\n    result:filterResult\n})\n}\n\nhandleFormSubmit = event => {\n    event.preventDefault();\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(\"**********\");\n    console.log(value);\n    console.log(name);\n\n    this.filterEmployees(value);\n    \n    this.setState({\n        [name]: value\n    })\n    this.filterEmployees(value);\n    this.filterEmployees(this.state.search);\n};\n\nhandleImputChange = event => {\n    event.preventDefault();\n    console.log(event);\n    const value = event.target.value;\n    const name = event.target.name;\n    console.log(\"**********\");\n    console.log(value);\n    console.log(name);\n\n    this.setState({\n        [ name ]: value\n    });\n};\n\nrender() {\n\n    return(\n        <div className='container'>\n            <div className='row'>\n                <div className='col-md-12'>\n                <h1>Employee Directory</h1>\n          </div>\n        </div>\n                <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <SearchForm\n                    value={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n          </div>\n        </div>\n\n    <div className='row'>\n        {/* <div> */}\n        <table className='table'>\n            <tr>\n            <th scope=\"col\">Photo</th>\n              <th>First Name</th>\n              {/* <th onClick={this.onSortChange}>First Name   */}\n              {/* <button onClick={this.onSortChange}> ^\n\t\t\t\t\t\t\t\t</button> */}\n              {/* </th> */}\n              <th scope=\"col\">Last Name </th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone</th>\n            </tr>\n            {/* { [...this.state.result].sort(this.sortTypes[this.state.currentSort].fn).map((item) =>  */}\n            {/* {this.state.result.length > 0 ? (\n                <div>\n                  {this.state.result.map(item => (\n                    <EmployeeCard\n                      picture={item.picture}\n                      firstName={item.firstName}\n                      lastName={item.lastName}\n                      email={item.email}\n                      phone={item.phone}\n                      key={item.key}\n                    />\n                  ))}\n                </div>\n              ) : (<div />)} */}\n            {[...this.state.result].map((item) =>\n              <EmployeeCard\n                picture={item.picture}\n                firstName={item.firstName}\n                lastName={item.lastName}\n                email={item.email}\n                phone={item.phone}\n                key={item.key}\n              />\n            )}\n\n        </table>\n        </div>\n        </div>\n    \n    );\n\n    }\n\n}\n\nexport default SearchResultArea;\n","/Users/Gun/Documents/GitHub/Employee-Directory/src/components/SearchForm.js",[],"/Users/Gun/Documents/GitHub/Employee-Directory/src/components/EmployeeCard.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":6,"column":7,"nodeType":"56","messageId":"57","endLine":6,"endColumn":17},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":5,"column":1,"nodeType":"62","endLine":9,"endColumn":3},{"ruleId":"54","severity":1,"message":"55","line":6,"column":7,"nodeType":"56","messageId":"57","endLine":6,"endColumn":17},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'MaxResults' is assigned a value but never used.","Identifier","unusedVar",["63"],["64"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]